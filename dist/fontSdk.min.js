!function(n){window.loadFontsSdk=function(n){function t(t){const e=new FontFace(t.name,"url("+t.url+")",{cache:n.cache?"default":"no-store"});if(n.preload){const n=document.createElement("link");n.rel="preload",n.as="font",n.href=t.url,n.type="font/woff2",document.head.appendChild(n)}return e.load().then(function(n){return document.fonts.add(n),n})}function e(e){return t(e).catch(()=>{if(n.loadAlternativeFonts){const o=n.alternativeFonts.find(n=>n.name===e.name);return o?t({name:o.name,url:o.url,cache:n.cache?"default":"no-store"}):Promise.reject(new Error(`Failed to load primary font "${e.name}" and no alternative font found.`))}return Promise.reject(new Error(`Failed to load primary font "${e.name}" and alternative fonts are disabled.`))})}const o=(n=Object.assign({},{fonts:[],fallbackFonts:["sans-serif"],cache:!1,preload:!1,alternativeFonts:[],customFontRepositories:[],loadAlternativeFonts:!1},n)).fonts.concat(n.customFontRepositories).map(function(n){return e("string"==typeof n?{name:n,url:n}:n)});return Promise.all(o).then(function(t){try{const e=t.map(function(n){return n.family}).concat(n.fallbackFonts).join(", ");document.body.style.fontFamily=e}catch(n){}})}}();export default loadFontsSdk;
//# sourceMappingURL=fontSdk.min.js.map